include .env.docker

CONTAINER_NAME = $(PROJECT_NAME)-symfony$(SYMFONY_VERSION)-php$(PHP_VERSION)
IMAGE_NAME = php$(PHP_VERSION)-symfony

help:
	@echo "start : Create the container and start the server"
	@echo "stop : Erase the container"
	@echo "restart : Restart the project"
	@echo "shell : Open the shell of the container"

start :
	docker-compose -f ./docker-compose.yml --env-file=.env.docker build
	@docker-compose -f ./docker-compose.yml --env-file=.env.docker up -d --remove-orphans

	@make clean

	@echo "\033[34mStarting server...\033[0m"
	@docker exec $(CONTAINER_NAME) symfony server:start -d > /dev/null 2>&1
	@echo "\033[32mServer started on http://localhost:$(PORT_HOST)\033[0m"

stop :
	@docker-compose -f ./docker-compose.yml --env-file=.env.docker down --remove-orphans

restart : stop start

shell :
	@docker exec -it $(CONTAINER_NAME) /bin/bash

update :
	@sed -i '' "s|^DATABASE_URL=.*|DATABASE_URL=\"mysql://root:${MYSQL_ROOT_PASSWORD}@mysql:3306/${DATABASE_NAME}?serverVersion=${MYSQL_SERVER_VERSION}\&charset=utf8mb4\"|" .env
	make restart

clean :
    @images=$$(docker images --filter "dangling=true" -q); \
    if [ -n "$$images" ]; then \
        docker rmi $$images --force; \
    fi